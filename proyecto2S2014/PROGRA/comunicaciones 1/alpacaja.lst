;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 05/09/2014 23:02:52
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2862      	GOTO       98
_SPI1_Init_Advanced:
;__Lib_SPI_c345.c,31 :: 		
;__Lib_SPI_c345.c,33 :: 		
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1287      	BCF        TRISC5_bit, 5
;__Lib_SPI_c345.c,34 :: 		
0x0006	0x1283      	BCF        STATUS, 5
0x0007	0x0829      	MOVF       FARG_SPI1_Init_Advanced_master, 0
0x0008	0x3A04      	XORLW      4
0x0009	0x1D03      	BTFSS      STATUS, 2
0x000A	0x280E      	GOTO       L_SPI1_Init_Advanced0
0x000B	0x1683      	BSF        STATUS, 5
0x000C	0x1587      	BSF        TRISC3_bit, 3
0x000D	0x2810      	GOTO       L_SPI1_Init_Advanced1
L_SPI1_Init_Advanced0:
0x000E	0x1683      	BSF        STATUS, 5
;__Lib_SPI_c345.c,35 :: 		
0x000F	0x1187      	BCF        TRISC3_bit, 3
L_SPI1_Init_Advanced1:
;__Lib_SPI_c345.c,36 :: 		
0x0010	0x1607      	BSF        TRISC4_bit, 4
;__Lib_SPI_c345.c,38 :: 		
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,39 :: 		
0x0013	0x0829      	MOVF       FARG_SPI1_Init_Advanced_master, 0
0x0014	0x0494      	IORWF      SSPCON, 1
;__Lib_SPI_c345.c,40 :: 		
0x0015	0x082B      	MOVF       FARG_SPI1_Init_Advanced_clock_idle, 0
0x0016	0x0494      	IORWF      SSPCON, 1
;__Lib_SPI_c345.c,41 :: 		
0x0017	0x082A      	MOVF       FARG_SPI1_Init_Advanced_data_sample, 0
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x0494      	IORWF      SSPSTAT, 1
;__Lib_SPI_c345.c,43 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x082B      	MOVF       FARG_SPI1_Init_Advanced_clock_idle, 0
0x001C	0x1903      	BTFSC      STATUS, 2
0x001D	0x2825      	GOTO       L_SPI1_Init_Advanced2
;__Lib_SPI_c345.c,44 :: 		
0x001E	0x082C      	MOVF       FARG_SPI1_Init_Advanced_transmit_edge, 0
0x001F	0x3A00      	XORLW      0
0x0020	0x1D03      	BTFSS      STATUS, 2
0x0021	0x2824      	GOTO       L_SPI1_Init_Advanced3
;__Lib_SPI_c345.c,45 :: 		
0x0022	0x1683      	BSF        STATUS, 5
0x0023	0x1714      	BSF        SSPSTAT, 6
L_SPI1_Init_Advanced3:
;__Lib_SPI_c345.c,46 :: 		
0x0024	0x282B      	GOTO       L_SPI1_Init_Advanced4
L_SPI1_Init_Advanced2:
;__Lib_SPI_c345.c,48 :: 		
0x0025	0x1283      	BCF        STATUS, 5
0x0026	0x082C      	MOVF       FARG_SPI1_Init_Advanced_transmit_edge, 0
0x0027	0x1903      	BTFSC      STATUS, 2
0x0028	0x282B      	GOTO       L_SPI1_Init_Advanced5
;__Lib_SPI_c345.c,49 :: 		
0x0029	0x1683      	BSF        STATUS, 5
0x002A	0x1714      	BSF        SSPSTAT, 6
L_SPI1_Init_Advanced5:
;__Lib_SPI_c345.c,50 :: 		
L_SPI1_Init_Advanced4:
;__Lib_SPI_c345.c,51 :: 		
0x002B	0x1283      	BCF        STATUS, 5
0x002C	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,52 :: 		
L_end_SPI1_Init_Advanced:
0x002D	0x0008      	RETURN
; end of _SPI1_Init_Advanced
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x002E	0x1683      	BSF        STATUS, 5
0x002F	0x1303      	BCF        STATUS, 6
0x0030	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0031	0x3090      	MOVLW      144
0x0032	0x1283      	BCF        STATUS, 5
0x0033	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0034	0x1683      	BSF        STATUS, 5
0x0035	0x1787      	BSF        TRISC7_bit, 7
;__Lib_UART_c67.c,8 :: 		
0x0036	0x1307      	BCF        TRISC6_bit, 6
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x1E8C      	BTFSS      PIR1, 5
0x0039	0x283D      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x003A	0x081A      	MOVF       RCREG, 0
0x003B	0x00F0      	MOVWF      R0
0x003C	0x2837      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x003D	0x0008      	RETURN
; end of _UART1_Init
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x003E	0x1683      	BSF        STATUS, 5
0x003F	0x1303      	BCF        STATUS, 6
0x0040	0x1898      	BTFSC      TXSTA, 1
0x0041	0x2844      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0042	0x0000      	NOP
0x0043	0x283E      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x0829      	MOVF       FARG_UART1_Write_data_, 0
0x0046	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x0047	0x0008      	RETURN
; end of _UART1_Write
_SPI1_Write:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x0048	0x1283      	BCF        STATUS, 5
0x0049	0x1303      	BCF        STATUS, 6
0x004A	0x0829      	MOVF       FARG_SPI1_Write_data_, 0
0x004B	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Write8:
0x004C	0x1683      	BSF        STATUS, 5
0x004D	0x1814      	BTFSC      SSPSTAT, 0
0x004E	0x2851      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,72 :: 		
0x004F	0x0000      	NOP
0x0050	0x284C      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,73 :: 		
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x0813      	MOVF       SSPBUF, 0
0x0053	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,75 :: 		
L_end_SPI1_Write:
0x0054	0x0008      	RETURN
; end of _SPI1_Write
_SPI1_Read:
;__Lib_SPI_c345.c,56 :: 		
;__Lib_SPI_c345.c,57 :: 		
0x0055	0x1283      	BCF        STATUS, 5
0x0056	0x1303      	BCF        STATUS, 6
0x0057	0x0829      	MOVF       FARG_SPI1_Read_buffer, 0
0x0058	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,58 :: 		
L_SPI1_Read6:
0x0059	0x1683      	BSF        STATUS, 5
0x005A	0x1814      	BTFSC      SSPSTAT, 0
0x005B	0x285E      	GOTO       L_SPI1_Read7
;__Lib_SPI_c345.c,59 :: 		
0x005C	0x0000      	NOP
0x005D	0x2859      	GOTO       L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,60 :: 		
0x005E	0x1283      	BCF        STATUS, 5
0x005F	0x0813      	MOVF       SSPBUF, 0
0x0060	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,63 :: 		
L_end_SPI1_Read:
0x0061	0x0008      	RETURN
; end of _SPI1_Read
_main:
;alpacaja.c,4 :: 		void main() {
;alpacaja.c,5 :: 		int i=0;//variable del for
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x1303      	BCF        STATUS, 6
0x0064	0x01A3      	CLRF       main_i_L0
0x0065	0x01A4      	CLRF       main_i_L0+1
0x0066	0x01A5      	CLRF       main_var_L0
0x0067	0x01A6      	CLRF       main_var_L0+1
0x0068	0x01A7      	CLRF       main_cont_L0
0x0069	0x01A8      	CLRF       main_cont_L0+1
;alpacaja.c,10 :: 		ansel=anselh=0;
0x006A	0x1683      	BSF        STATUS, 5
0x006B	0x1703      	BSF        STATUS, 6
0x006C	0x0189      	CLRF       ANSELH
0x006D	0x0188      	CLRF       ANSEL
;alpacaja.c,11 :: 		trisb=0;
0x006E	0x0186      	CLRF       TRISB
;alpacaja.c,12 :: 		portb=0;
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x0186      	CLRF       PORTB
;alpacaja.c,13 :: 		Chip_Select = 1;                       // Deselect DAC
0x0072	0x1407      	BSF        RC0_bit, 0
;alpacaja.c,14 :: 		Chip_Select_Direction = 0;             // Set CS# pin as Output
0x0073	0x1683      	BSF        STATUS, 5
0x0074	0x1007      	BCF        TRISC0_bit, 0
;alpacaja.c,15 :: 		SPI1_Init_Advanced(_SPI_MASTER_OSC_DIV4, _SPI_DATA_SAMPLE_MIDDLE, _SPI_CLK_IDLE_LOW, _SPI_HIGH_2_LOW);
0x0075	0x1283      	BCF        STATUS, 5
0x0076	0x01A9      	CLRF       FARG_SPI1_Init_Advanced_master
0x0077	0x01AA      	CLRF       FARG_SPI1_Init_Advanced_data_sample
0x0078	0x01AB      	CLRF       FARG_SPI1_Init_Advanced_clock_idle
0x0079	0x01AC      	CLRF       FARG_SPI1_Init_Advanced_transmit_edge
0x007A	0x2003      	CALL       _SPI1_Init_Advanced
;alpacaja.c,16 :: 		UART1_Init(9600);
0x007B	0x3081      	MOVLW      129
0x007C	0x1683      	BSF        STATUS, 5
0x007D	0x0099      	MOVWF      SPBRG
0x007E	0x1518      	BSF        TXSTA, 2
0x007F	0x202E      	CALL       _UART1_Init
;alpacaja.c,17 :: 		Delay_ms(100);//esperando para que uart se estabilice
0x0080	0x3003      	MOVLW      3
0x0081	0x00FB      	MOVWF      R11
0x0082	0x308A      	MOVLW      138
0x0083	0x00FC      	MOVWF      R12
0x0084	0x3055      	MOVLW      85
0x0085	0x00FD      	MOVWF      R13
L_main0:
0x0086	0x0BFD      	DECFSZ     R13, 1
0x0087	0x2886      	GOTO       L_main0
0x0088	0x0BFC      	DECFSZ     R12, 1
0x0089	0x2886      	GOTO       L_main0
0x008A	0x0BFB      	DECFSZ     R11, 1
0x008B	0x2886      	GOTO       L_main0
0x008C	0x0000      	NOP
0x008D	0x0000      	NOP
;alpacaja.c,22 :: 		vinex:
___main_vinex:
;alpacaja.c,23 :: 		cont=cont++;
0x008E	0x0AA7      	INCF       main_cont_L0, 1
0x008F	0x1903      	BTFSC      STATUS, 2
0x0090	0x0AA8      	INCF       main_cont_L0+1, 1
;alpacaja.c,24 :: 		for (i=0;i<50;i++){
0x0091	0x01A3      	CLRF       main_i_L0
0x0092	0x01A4      	CLRF       main_i_L0+1
L_main1:
0x0093	0x3080      	MOVLW      128
0x0094	0x0624      	XORWF      main_i_L0+1, 0
0x0095	0x00F0      	MOVWF      R0
0x0096	0x3080      	MOVLW      128
0x0097	0x0270      	SUBWF      R0, 0
0x0098	0x1D03      	BTFSS      STATUS, 2
0x0099	0x289C      	GOTO       L__main12
0x009A	0x3032      	MOVLW      50
0x009B	0x0223      	SUBWF      main_i_L0, 0
L__main12:
0x009C	0x1803      	BTFSC      STATUS, 0
0x009D	0x2944      	GOTO       L_main2
;alpacaja.c,25 :: 		switch (cont){
0x009E	0x2920      	GOTO       L_main4
;alpacaja.c,28 :: 		case 1:
L_main6:
;alpacaja.c,29 :: 		Chip_Select = 0;                       // seleccionamos adc
0x009F	0x1007      	BCF        RC0_bit, 0
;alpacaja.c,31 :: 		SPI1_Write(temp);// envio de configuracion
0x00A0	0x309F      	MOVLW      159
0x00A1	0x00A9      	MOVWF      FARG_SPI1_Write_data_
0x00A2	0x2048      	CALL       _SPI1_Write
;alpacaja.c,33 :: 		var = SPI1_Read(buff);
0x00A3	0x0822      	MOVF       main_buff_L0, 0
0x00A4	0x00A9      	MOVWF      FARG_SPI1_Read_buffer
0x00A5	0x2055      	CALL       _SPI1_Read
0x00A6	0x0870      	MOVF       R0, 0
0x00A7	0x00A5      	MOVWF      main_var_L0
0x00A8	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,34 :: 		Chip_Select = 1;                       // Deseleccionamos adc
0x00A9	0x1407      	BSF        RC0_bit, 0
;alpacaja.c,35 :: 		portb=var;      //se agrega encriptacion bit 9 y 8 ambos en 0 = 0
0x00AA	0x0825      	MOVF       main_var_L0, 0
0x00AB	0x0086      	MOVWF      PORTB
;alpacaja.c,36 :: 		UART1_Write(var);
0x00AC	0x0825      	MOVF       main_var_L0, 0
0x00AD	0x00A9      	MOVWF      FARG_UART1_Write_data_
0x00AE	0x203E      	CALL       _UART1_Write
;alpacaja.c,37 :: 		var=0;
0x00AF	0x01A5      	CLRF       main_var_L0
0x00B0	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,38 :: 		Delay_us(1);//hacer 50 veces
0x00B1	0x0000      	NOP
0x00B2	0x0000      	NOP
0x00B3	0x0000      	NOP
0x00B4	0x0000      	NOP
0x00B5	0x0000      	NOP
;alpacaja.c,40 :: 		case 2:
L_main7:
;alpacaja.c,41 :: 		Chip_Select = 0;                       // seleccionamos adc
0x00B6	0x1007      	BCF        RC0_bit, 0
;alpacaja.c,43 :: 		SPI1_Write(temp);// envio de configuracion
0x00B7	0x30DF      	MOVLW      223
0x00B8	0x00A9      	MOVWF      FARG_SPI1_Write_data_
0x00B9	0x2048      	CALL       _SPI1_Write
;alpacaja.c,45 :: 		var = SPI1_Read(buff);
0x00BA	0x0822      	MOVF       main_buff_L0, 0
0x00BB	0x00A9      	MOVWF      FARG_SPI1_Read_buffer
0x00BC	0x2055      	CALL       _SPI1_Read
0x00BD	0x0870      	MOVF       R0, 0
0x00BE	0x00A5      	MOVWF      main_var_L0
0x00BF	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,46 :: 		Chip_Select = 1;                       // Deseleccionamos adc
0x00C0	0x1407      	BSF        RC0_bit, 0
;alpacaja.c,47 :: 		portb=var;
0x00C1	0x0825      	MOVF       main_var_L0, 0
0x00C2	0x0086      	MOVWF      PORTB
;alpacaja.c,48 :: 		var=var+256;  //se agrega encriptacion bit 9 en 0 y 8 en 1 = 256
0x00C3	0x3000      	MOVLW      0
0x00C4	0x0725      	ADDWF      main_var_L0, 0
0x00C5	0x00F0      	MOVWF      R0
0x00C6	0x0826      	MOVF       main_var_L0+1, 0
0x00C7	0x1803      	BTFSC      STATUS, 0
0x00C8	0x3E01      	ADDLW      1
0x00C9	0x3E01      	ADDLW      1
0x00CA	0x00F1      	MOVWF      R0+1
0x00CB	0x0870      	MOVF       R0, 0
0x00CC	0x00A5      	MOVWF      main_var_L0
0x00CD	0x0871      	MOVF       R0+1, 0
0x00CE	0x00A6      	MOVWF      main_var_L0+1
;alpacaja.c,49 :: 		UART1_Write(var);
0x00CF	0x0870      	MOVF       R0, 0
0x00D0	0x00A9      	MOVWF      FARG_UART1_Write_data_
0x00D1	0x203E      	CALL       _UART1_Write
;alpacaja.c,50 :: 		var=0;
0x00D2	0x01A5      	CLRF       main_var_L0
0x00D3	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,51 :: 		Delay_us(1);//hacer 50 veces
0x00D4	0x0000      	NOP
0x00D5	0x0000      	NOP
0x00D6	0x0000      	NOP
0x00D7	0x0000      	NOP
0x00D8	0x0000      	NOP
;alpacaja.c,53 :: 		case 3:
L_main8:
;alpacaja.c,54 :: 		Chip_Select = 0;                       // seleccionamos adc
0x00D9	0x1007      	BCF        RC0_bit, 0
;alpacaja.c,56 :: 		SPI1_Write(temp);// envio de configuracion
0x00DA	0x30AF      	MOVLW      175
0x00DB	0x00A9      	MOVWF      FARG_SPI1_Write_data_
0x00DC	0x2048      	CALL       _SPI1_Write
;alpacaja.c,58 :: 		var = SPI1_Read(buff);
0x00DD	0x0822      	MOVF       main_buff_L0, 0
0x00DE	0x00A9      	MOVWF      FARG_SPI1_Read_buffer
0x00DF	0x2055      	CALL       _SPI1_Read
0x00E0	0x0870      	MOVF       R0, 0
0x00E1	0x00A5      	MOVWF      main_var_L0
0x00E2	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,59 :: 		Chip_Select = 1;                       // Deseleccionamos adc
0x00E3	0x1407      	BSF        RC0_bit, 0
;alpacaja.c,60 :: 		portb=var;
0x00E4	0x0825      	MOVF       main_var_L0, 0
0x00E5	0x0086      	MOVWF      PORTB
;alpacaja.c,61 :: 		var=var+512;   //se agrega encriptacion bit 9 en 1 y 8 en 0 = 512
0x00E6	0x3000      	MOVLW      0
0x00E7	0x0725      	ADDWF      main_var_L0, 0
0x00E8	0x00F0      	MOVWF      R0
0x00E9	0x0826      	MOVF       main_var_L0+1, 0
0x00EA	0x1803      	BTFSC      STATUS, 0
0x00EB	0x3E01      	ADDLW      1
0x00EC	0x3E02      	ADDLW      2
0x00ED	0x00F1      	MOVWF      R0+1
0x00EE	0x0870      	MOVF       R0, 0
0x00EF	0x00A5      	MOVWF      main_var_L0
0x00F0	0x0871      	MOVF       R0+1, 0
0x00F1	0x00A6      	MOVWF      main_var_L0+1
;alpacaja.c,62 :: 		UART1_Write(var);
0x00F2	0x0870      	MOVF       R0, 0
0x00F3	0x00A9      	MOVWF      FARG_UART1_Write_data_
0x00F4	0x203E      	CALL       _UART1_Write
;alpacaja.c,63 :: 		var=0;
0x00F5	0x01A5      	CLRF       main_var_L0
0x00F6	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,64 :: 		Delay_us(1);//hacer 50 veces
0x00F7	0x0000      	NOP
0x00F8	0x0000      	NOP
0x00F9	0x0000      	NOP
0x00FA	0x0000      	NOP
0x00FB	0x0000      	NOP
;alpacaja.c,66 :: 		case 4:
L_main9:
;alpacaja.c,67 :: 		Chip_Select = 0;                       // seleccionamos adc
0x00FC	0x1007      	BCF        RC0_bit, 0
;alpacaja.c,69 :: 		SPI1_Write(temp);// envio de configuracion
0x00FD	0x30EF      	MOVLW      239
0x00FE	0x00A9      	MOVWF      FARG_SPI1_Write_data_
0x00FF	0x2048      	CALL       _SPI1_Write
;alpacaja.c,71 :: 		var = SPI1_Read(buff);
0x0100	0x0822      	MOVF       main_buff_L0, 0
0x0101	0x00A9      	MOVWF      FARG_SPI1_Read_buffer
0x0102	0x2055      	CALL       _SPI1_Read
0x0103	0x0870      	MOVF       R0, 0
0x0104	0x00A5      	MOVWF      main_var_L0
0x0105	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,72 :: 		Chip_Select = 1;                       // Deseleccionamos adc
0x0106	0x1407      	BSF        RC0_bit, 0
;alpacaja.c,73 :: 		portb=var;
0x0107	0x0825      	MOVF       main_var_L0, 0
0x0108	0x0086      	MOVWF      PORTB
;alpacaja.c,74 :: 		var=var+768;     //se agrega encriptacion bit 9 y 8 ambos en  1 = 768
0x0109	0x3000      	MOVLW      0
0x010A	0x0725      	ADDWF      main_var_L0, 0
0x010B	0x00F0      	MOVWF      R0
0x010C	0x0826      	MOVF       main_var_L0+1, 0
0x010D	0x1803      	BTFSC      STATUS, 0
0x010E	0x3E01      	ADDLW      1
0x010F	0x3E03      	ADDLW      3
0x0110	0x00F1      	MOVWF      R0+1
0x0111	0x0870      	MOVF       R0, 0
0x0112	0x00A5      	MOVWF      main_var_L0
0x0113	0x0871      	MOVF       R0+1, 0
0x0114	0x00A6      	MOVWF      main_var_L0+1
;alpacaja.c,75 :: 		UART1_Write(var);
0x0115	0x0870      	MOVF       R0, 0
0x0116	0x00A9      	MOVWF      FARG_UART1_Write_data_
0x0117	0x203E      	CALL       _UART1_Write
;alpacaja.c,76 :: 		var=0;
0x0118	0x01A5      	CLRF       main_var_L0
0x0119	0x01A6      	CLRF       main_var_L0+1
;alpacaja.c,77 :: 		Delay_us(1);//hacer 50 veces
0x011A	0x0000      	NOP
0x011B	0x0000      	NOP
0x011C	0x0000      	NOP
0x011D	0x0000      	NOP
0x011E	0x0000      	NOP
;alpacaja.c,78 :: 		}
0x011F	0x2940      	GOTO       L_main5
L_main4:
0x0120	0x3000      	MOVLW      0
0x0121	0x0628      	XORWF      main_cont_L0+1, 0
0x0122	0x1D03      	BTFSS      STATUS, 2
0x0123	0x2926      	GOTO       L__main13
0x0124	0x3001      	MOVLW      1
0x0125	0x0627      	XORWF      main_cont_L0, 0
L__main13:
0x0126	0x1903      	BTFSC      STATUS, 2
0x0127	0x289F      	GOTO       L_main6
0x0128	0x3000      	MOVLW      0
0x0129	0x0628      	XORWF      main_cont_L0+1, 0
0x012A	0x1D03      	BTFSS      STATUS, 2
0x012B	0x292E      	GOTO       L__main14
0x012C	0x3002      	MOVLW      2
0x012D	0x0627      	XORWF      main_cont_L0, 0
L__main14:
0x012E	0x1903      	BTFSC      STATUS, 2
0x012F	0x28B6      	GOTO       L_main7
0x0130	0x3000      	MOVLW      0
0x0131	0x0628      	XORWF      main_cont_L0+1, 0
0x0132	0x1D03      	BTFSS      STATUS, 2
0x0133	0x2936      	GOTO       L__main15
0x0134	0x3003      	MOVLW      3
0x0135	0x0627      	XORWF      main_cont_L0, 0
L__main15:
0x0136	0x1903      	BTFSC      STATUS, 2
0x0137	0x28D9      	GOTO       L_main8
0x0138	0x3000      	MOVLW      0
0x0139	0x0628      	XORWF      main_cont_L0+1, 0
0x013A	0x1D03      	BTFSS      STATUS, 2
0x013B	0x293E      	GOTO       L__main16
0x013C	0x3004      	MOVLW      4
0x013D	0x0627      	XORWF      main_cont_L0, 0
L__main16:
0x013E	0x1903      	BTFSC      STATUS, 2
0x013F	0x28FC      	GOTO       L_main9
L_main5:
;alpacaja.c,24 :: 		for (i=0;i<50;i++){
0x0140	0x0AA3      	INCF       main_i_L0, 1
0x0141	0x1903      	BTFSC      STATUS, 2
0x0142	0x0AA4      	INCF       main_i_L0+1, 1
;alpacaja.c,79 :: 		}
0x0143	0x2893      	GOTO       L_main1
L_main2:
;alpacaja.c,81 :: 		if(cont==4){
0x0144	0x3000      	MOVLW      0
0x0145	0x0628      	XORWF      main_cont_L0+1, 0
0x0146	0x1D03      	BTFSS      STATUS, 2
0x0147	0x294A      	GOTO       L__main17
0x0148	0x3004      	MOVLW      4
0x0149	0x0627      	XORWF      main_cont_L0, 0
L__main17:
0x014A	0x1D03      	BTFSS      STATUS, 2
0x014B	0x294E      	GOTO       L_main10
;alpacaja.c,82 :: 		cont=0;
0x014C	0x01A7      	CLRF       main_cont_L0
0x014D	0x01A8      	CLRF       main_cont_L0+1
;alpacaja.c,83 :: 		}
L_main10:
;alpacaja.c,84 :: 		goto vinex
0x014E	0x288E      	GOTO       ___main_vinex
;alpacaja.c,85 :: 		}
L_end_main:
0x014F	0x294F      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [43]    _SPI1_Init_Advanced
0x002E      [16]    _UART1_Init
0x003E      [10]    _UART1_Write
0x0048      [13]    _SPI1_Write
0x0055      [13]    _SPI1_Read
0x0062     [238]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [0]    Chip_Select
0x0007       [0]    RC0_bit
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [2]    ___DoICPAddr
0x0022       [1]    main_buff_L0
0x0023       [2]    main_i_L0
0x0025       [2]    main_var_L0
0x0027       [2]    main_cont_L0
0x0029       [1]    FARG_SPI1_Init_Advanced_master
0x0029       [1]    FARG_SPI1_Read_buffer
0x0029       [1]    FARG_UART1_Write_data_
0x0029       [1]    FARG_SPI1_Write_data_
0x002A       [1]    FARG_SPI1_Init_Advanced_data_sample
0x002B       [1]    FARG_SPI1_Init_Advanced_clock_idle
0x002C       [1]    FARG_SPI1_Init_Advanced_transmit_edge
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    Chip_Select_Direction
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC6_bit
0x0094       [1]    SSPSTAT
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_main0
  ___main_vinex
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_end_main
  _main
  L__main12
  L__main13
  L__main14
  L__main15
  L__main16
  L__main17
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
